/*
 * Copyright 2010-2010 LinkedIn, Inc
 * Portions Copyright (c) 2013-2021 Yan Pujante
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

buildscript {
  repositories {
    if(project.hasProperty('maven.buildscript.repository'))
    {
      maven {
        url new File(project.properties["maven.buildscript.repository"]).toURI()
      }
    }

    if(project.hasProperty('ivy.buildscript.repository'))
    {
      ivy {
        url = new File(project.properties['ivy.buildscript.repository'])
        layout 'maven'
      }
    }

   // if you want to disallow maven central
   if(project.properties['no.maven.central'] != 'true')
   {
     mavenCentral()
   }
 }

  dependencies {
    classpath 'org.pongasoft:org.pongasoft.gradle-plugins:3.0.1'
  }
}

apply plugin: 'org.pongasoft.userConfig'
apply plugin: 'org.pongasoft.spec'

ext {
  topBuildDir = userConfig.top.build.dir ?: "${rootDir}/out/build"
}

allprojects {
  group = spec.group
  version = spec.version
}

subprojects {
  apply plugin: 'org.pongasoft.externalRepositories'
  apply plugin: 'org.pongasoft.externalPublishing'
  apply plugin: 'org.pongasoft.release'
  apply plugin: 'org.pongasoft.signing'

  apply plugin: 'java'

  externalRepositories.build.configure()

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(spec.versions.jdk)
    }
  }

  buildDir = "${topBuildDir}${project.path.replace(':','/')}".toString()
}
